<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.wk</groupId>
    <artifactId>framework</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>oauth2-server</module>
        <module>eureka-server</module>
        <module>config-server</module>
        <module>spring-cloud-admin</module>
        <module>spring-cloud-zuul</module>
        <module>common</module>
        <module>sys</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Finchley.SR4</spring-cloud.version>
        <spring-boot.version>2.0.1.RELEASE</spring-boot.version>

        <dockerNexusServer>wk-aliyun</dockerNexusServer>
        <dockerNexusServerPort>18082</dockerNexusServerPort>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.1.8.RELEASE</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>package</id>
                            <phase>package</phase>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
<!--                    <configuration>-->
<!--                        <mainClass>com.wk.Application</mainClass>-->
<!--                        <layout>ZIP</layout>-->
<!--                        <attach>false</attach>-->
<!--                    </configuration>-->
                </plugin>

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>1.2.2</version>
                    <executions>
                        <execution>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                            <configuration>
                                <skipDockerBuild>${docker.skipDockerBuild}</skipDockerBuild>
                                <skipDockerPush>${docker.skipDockerPush}</skipDockerPush>
                                <imageName>${dockerNexusServer}:${dockerNexusServerPort}/${project.artifactId}:${project.version}</imageName>
                                <imageTags>
                                    <imageTag>${project.version}</imageTag>
                                </imageTags>
                                <registryUrl>http://${dockerNexusServer}:${dockerNexusServerPort}</registryUrl>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <baseImage>java:8</baseImage>
                        <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                        <env>
                        </env>
                        <resources>
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.build.directory}</directory>
                                <include>${project.build.finalName}.jar</include>
                            </resource>
                        </resources>
                        <forceTags>true</forceTags>
                        <serverId>central</serverId>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.wk</groupId>
                    <artifactId>dockercompose-maven-plugin</artifactId>
                    <version>1.0.0-SNAPSHOT</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                            <configuration>
                                <applicationGroup>framework</applicationGroup>
                                <dockerNexusServer>${dockerNexusServer}</dockerNexusServer>
                                <dockerNexusServerPort>${dockerNexusServerPort}</dockerNexusServerPort>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension></nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <!--  源码发布  -->
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- 子项目版本控制 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M1</version>
                <configuration>
                    <allowReleasePluginSnapshot>true</allowReleasePluginSnapshot>
                    <useReleaseProfile>true</useReleaseProfile>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>

        </plugins>
        <!--重要 如果不设置resource 会导致application.yaml中的@@找不到pom文件中的配置-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <!--重要 如果不设置resource 会导致application.yaml中的@@找不到pom文件中的配置-->
    </build>

    <repositories>
        <repository>
            <id>central</id>
            <name>central</name>
            <url>http://wk-aliyun:1000/repository/maven-public/</url>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>Releases</id>
            <name>Releases</name>
            <url>http://wk-aliyun:1000/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>Snapshot</id>
            <name>Snapshot</name>
            <url>http://wk-aliyun:1000/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>
        <profile>
            <!--不同环境Profile的唯一id-->
            <id>dev</id>
            <properties>
                <docker.skipDockerBuild>true</docker.skipDockerBuild>
                <docker.skipDockerPush>true</docker.skipDockerPush>
            </properties>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

        </profile>
        <profile>
            <id>test</id>
            <properties>
                <docker.skipDockerBuild>false</docker.skipDockerBuild>
                <docker.skipDockerPush>false</docker.skipDockerPush>
            </properties>

        </profile>
    </profiles>
</project>