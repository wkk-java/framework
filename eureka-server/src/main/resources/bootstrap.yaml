spring:
  application:
    name: eureka-server
  security:
    user:
      name: ${SECURITY_USER:admin}
      password: ${SECURITY_USER_PASSWORD}
  cloud:
    inetutils:
      # 限制在docker容器中使用的ip端防止容器绑定到不同ip端，导致容器间无法连接
      preferred-networks: 10.10.0
      timeout-seconds: 2
      default-hostname: ${EUREKA_HOST_NAME:eureka1}

eureka:
  client:
    #由于该应用为注册中心,设置为false,表明不向注册中心注册自己
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 10
    service-url:
      defaultZone: ${EUREKA_SERVER_LIST:http://eureka1:2001/eureka/}
  server:
    #自我保护开关,关闭将保证不可用服务会及时剔除
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 10000

  instance: #心跳检测与续约时间
    #客户端向服务端发送心跳的时间间隔,单位秒
    lease-renewal-interval-in-seconds: 5
    #服务端收到最后一次心跳后等待的时间上线,单位秒
    lease-expiration-duration-in-seconds: 10
    hostname: ${EUREKA_HOST_NAME:eureka1}
    prefer-ip-address: true
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
server:
  port: ${server_port:2001}

logging:
  level:
    com:
      netflix:
        eureka: OFF
        discovery: OFF