spring:
  application:
    name: oauth2-server
server:
  port: 2020
application:
  init:
    users[0]:
      username: admin
      password: '{bcrypt}$2a$10$tMSDLeQjFehV8Z1BxoU3quISNyLXXMDI8pdA3RKdwqv1ujuZ6AAQG'
      authorities: admin
      roles: admin,test-admin
    users[1]:
      username: test-admin
      password: '{bcrypt}$2a$10$tMSDLeQjFehV8Z1BxoU3quISNyLXXMDI8pdA3RKdwqv1ujuZ6AAQG'
      authorities: admin
      roles: test-admin

eureka:   #<1>
  instance:
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
  client:
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: http://admin:${SECURITY_USER_PASSWORD}@eureka:2001/eureka/
management:
  endpoints:
    web:
      exposure:
        include: "*"  #<2>
  endpoint:
    health:
      show-details: ALWAYS
logging.level.org.springframework.security: info

---
spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:master}
  application:
    name: "@project.name@"
HOSTNAME: ${spring.cloud.client.ipAddress}
...

---
spring:
  profiles: master
  cloud:
    config:
      uri: ${configserverurl:http://localhost:2010}
      username: admin
      password: ${SECURITY_USER_PASSWORD}
...

---
spring:
  cloud:
    config:
      profile: ${CONFIG_PROFILE:mac}
      label: ${spring.profiles.active}
      name: "@project.name@"
      failFast: true
      retry:
        max-attempts: 10
        initial-interval: 1000
...